@model MIVProject.supplyHeader
@using Resources
@{
    ViewBag.Title = Local.Confirm;
    ViewBag.HideSidebar = true;
}
<h2>@Local.Confirm</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal supply-header-create">
        <hr />
        <span>@ViewBag.Msg</span>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("paymentMethod", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.paymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("deliveryMethod", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.deliveryMethod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.paymentDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.paymentDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.deliveryDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.deliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Session["type"].ToString() != "dobavljač" && Session["type"].ToString() != "dobavljac")
        {<div class="form-group">
            <label class= "control-label col-md-2" >@Local.Supplier</label>
            <div class="col-md-10">
                @Html.DropDownList("supplier", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.supplier, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                <label class = "control-label col-md-2" >@Local.SupplyStatus</label>
                <div class="col-md-10">
                    @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Project</label>
            <div class="col-md-10">
                @Html.DropDownList("project", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.project, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Currency</label>
            <div class="col-md-10">
                @Html.DropDownList("currency", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="items-wrapper">
            <div class="acc-items"></div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Local.Create class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
