@model MIVProject.supplyHeader
@using Resources
@{
    ViewBag.Title = Local.Confirm;
    ViewBag.HideSidebar = true;

    project Project = null;
    if (ViewBag.project != null) {
        Project = (project)ViewBag.project;

    }

}
@if (Project != null)
{
    <h2>Ponuda za @Project.name</h2>
}
else
{
<h2>@Local.Confirm</h2>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal supply-header-create">
        <hr />
        <span>@ViewBag.Msg</span>
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if(Project != null)
        {
            <input id="project-id" type="hidden" value=@Project.id />
            <input id="project-name" type="hidden" value="@Project.name" />
        }
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("paymentMethod", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.paymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("deliveryMethod", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.deliveryMethod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.paymentDate, new { htmlAttributes = new { @class = "form-control", required = "required", @type = "date" } })
                @Html.ValidationMessageFor(model => model.paymentDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.deliveryDate, new { htmlAttributes = new { @class = "form-control", required = "required", @type = "date" } })
                @Html.ValidationMessageFor(model => model.deliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Session["type"].ToString() != "dobavljač" && Session["type"].ToString() != "dobavljac")
        {<div class="form-group">
            <label class= "control-label col-md-2" >@Local.Supplier</label>
            <div class="col-md-10">
                @Html.DropDownList("supplier", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.supplier, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                <label class = "control-label col-md-2" >@Local.SupplyStatus</label>
                <div class="col-md-10">
                    @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @type="date" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Currency</label>
            <div class="col-md-10">
                @Html.DropDownList("currency", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="items-wrapper">
            <div class="acc-items">
                @if (Project != null)
                {
                    foreach (var item in ViewBag.projectItems)
                    {
                        projectItem pt = (projectItem)item;
                        <div id="acc-items-section-@pt.projectItemID" class="acc-items-section">
                            <a class="acc-items-section-title" id="acc-items-section-title-@pt.projectItemID" href="#acc-items-@pt.projectItemID">
                                @pt.item1.name
                            </a>
                            <div class="acc-items-section-content" id="acc-items-@pt.projectItemID">
                                <div class="full-width"></div>
                            </div>
                        </div>
                      }
                  }
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="save-btn" type="button" value="Sačuvaj" class="btn btn-default" />
                                </div>
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="send-btn" type="button" value="Pošalji" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }


                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
