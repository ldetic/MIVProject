@model MIVProject.supplyHeader
@using Resources
@{
    ViewBag.Title = Local.Edit;
}

<h2>@Local.Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Local.SupplyHeader</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.supplyID)

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("paymentMethod", null, htmlAttributes: new { @class = "form-control",  required = "required" })
                @Html.ValidationMessageFor(model => model.paymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("deliveryMethod", null, htmlAttributes: new { @class = "form-control",  required = "required" })
                @Html.ValidationMessageFor(model => model.deliveryMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.paymentDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.paymentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.deliveryDate, new { htmlAttributes = new { @class = "form-control",  required = "required" } })
                @Html.ValidationMessageFor(model => model.deliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @if ((string)Session["type"] != "dobavljac") {
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Supplier</label>
            <div class="col-md-10">
                @Html.DropDownList("supplier", null, htmlAttributes: new { @class = "form-control",  required = "required" })
                @Html.ValidationMessageFor(model => model.supplier, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control",  required = "required" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>
        @if ((string)Session["type"] != "dobavljac")
        {
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Project</label>
            <div class="col-md-10">
                @Html.DropDownList("project", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.project, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.SupplyStatus</label>
            <div class="col-md-10">
                @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Currency</label>
            <div class="col-md-10">
                @Html.DropDownList("currency", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<table id="offer-items-table" class="table object-table" data-toggle="table"
       data-pagination="true" data-query-params="queryParams">
    <thead>
        <tr>
            <th data-field="number">
                #
            </th>
            <th data-field="name">
                @Local.Name
            </th>
            <th data-field="quality">
                @Local.Quality
            </th>
            <th data-field="quantity">
                @Local.Quantity
            </th>
            <th data-field="price">
                @Local.Price
            </th>
            <th data-field="shipDate">
                @Local.shipDate
            </th>
            <th data-field="comment">
                @Local.Comment
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ViewBag.supplyItems)
        {
            supplyItem si = (supplyItem)item;
            <tr id="object-row-@si.supplyItemID">
                <td>
                    @si.itemNumber
                </td>
                <td>
                    @si.item1.name
                </td>
                <td>
                    @si.quality
                </td>
                <td>
                    @si.quantity @si.item1.unitOfMeasure
                </td>
                <td>
                    @si.price
                </td>
                <td>
                    @si.shipDate
                </td>
                <td>
                    @si.comment
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value=@Local.Save class="btn btn-default" />
        <input type="submit" value=@Local.Checkout class="btn btn-default" />
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
