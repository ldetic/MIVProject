@model MIVProject.supplyHeader
@using Resources
@{
    ViewBag.Title = Local.Edit;
}

<h2>@Local.Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal supply-header-edit">
        <h4>@Local.SupplyHeader</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.supplyID)

        @if ((string)Session["type"] != "dobavljac")
        {
            <div class="form-group">
                <label class="control-label col-md-2">@Local.Supplier</label>
                <div class="col-md-10">
                    @Model.supplier1.name
                </div>
            </div>
        }
        @if ((string)Session["type"] != "dobavljac" && Model.project1 != null)
        {
            <div class="form-group">
                <label class="control-label col-md-2">@Local.Project</label>
                <div class="col-md-10">
                    @Model.project1.name
                </div>
            </div>
        }
        <div class="form-group">
            <label class="control-label col-md-2">@Local.SupplyStatus</label>
            <div class="col-md-10">
                @Model.supplyStatus.name
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("paymentMethod", null, htmlAttributes: new { @class = "form-control",  required = "required" })
                @Html.ValidationMessageFor(model => model.paymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryMethod</label>
            <div class="col-md-10">
                @Html.DropDownList("deliveryMethod", null, htmlAttributes: new { @class = "form-control",  required = "required" })
                @Html.ValidationMessageFor(model => model.deliveryMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.PaymentDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.paymentDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.paymentDate.Value.ToString("yyyy-MM-dd"),  required = "required", @type="date" } })
                @Html.ValidationMessageFor(model => model.paymentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.DeliveryDate</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.deliveryDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.deliveryDate.Value.ToString("yyyy-MM-dd"),  required = "required", @type="date" } })
                @Html.ValidationMessageFor(model => model.deliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @Value = Model.date.Value.ToString("yyyy-MM-dd"), required = "required", @type="date" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <label class = "control-label col-md-2" >@Local.Currency</label>
            <div class="col-md-10">
                @Html.DropDownList("currency", null, htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<div class="items-wrapper">
    <div class="acc-items">
    @foreach (var item in ViewBag.supplyItems)
    {
        supplyItem si = (supplyItem)item;
        <div id="acc-items-section-@si.itemNumber" class="acc-items-section">
            <a class="acc-items-section-title" id="acc-items-section-title-@si.itemNumber" href="#acc-items-@si.itemNumber">
                @si.item1.name
                <div type="button" class="close" aria-label="Close"><span aria-hidden="true">×</span></div>              
            </a>
            <div class="acc-items-section-content" id="acc-items-@si.itemNumber">
                <div class="full-width">
                    <div>
                        <input id="item-id-@si.itemNumber" type="hidden" class="id" value="@si.item1.itemID" aria-invalid="false">             
                        <input id="item-id-@si.itemNumber" type="hidden" class="supplyItemId" value="@si.supplyItemID" aria-invalid="false">             
                    </div>
                    @if (si.quantity >= 0)
                    {
                        <div>
                            <label for="item-quantity-@si.itemNumber">@Local.Quantity:</label>
                            <input id="item-quantity-@si.itemNumber" type="number" class="form-control text-box quantity valid" value="@si.quantity" min="0" max="@si.item1.quantity" aria-invalid="false">
                            <span>@si.item1.unitOfMeasure</span>
                        </div>
                    }
                    @if (si.price != null)
                    {
                        <div>
                            <label for="item-price-@si.itemNumber">@Local.Price:</label>
                            <input id="item-price-@si.itemNumber" type="number" class="form-control text-box price valid" value="@si.price" min="0" step="0.01" aria-invalid="false">
                        </div>
                    }
                    
                    @if (si.shipDate.HasValue)
                    {
                        <div>
                            <label for="item-date-@si.itemNumber">@Local.shipDate:</label>
                            <input id="item-date-@si.itemNumber" type="date" class="form-control text-box shipDate valid" value="@si.shipDate.Value.ToString("yyyy-MM-dd")" aria-invalid="false">
                        </div>
                    }
                    @if (si.quality != null)
                    {
                        <div>
                            <label for="item-quality-@si.itemNumber">@Local.Quality:</label>
                            <textarea id="item-quality-@si.itemNumber" class="form-control text-box quality valid" aria-invalid="false">@si.quality</textarea>
                        </div>
                    }
                    @if (si.comment != null)
                    {
                        <div>
                            <label for="item-comment-@si.itemNumber">@Local.Comment:</label>
                            <textarea id="item-comment-@si.itemNumber" class="form-control text-box comment valid" aria-invalid="false">@si.comment</textarea>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    </div>
</div>


<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <button id="save-btn"  class="btn btn-default" >@Local.Save</button>
        <button id="send-btn" class="btn btn-default" >@Local.Checkout</button>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
